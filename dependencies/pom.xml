<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jxrory</groupId>
    <artifactId>dependencies</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>依赖包</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring Boot -->
        <spring-boot.version>2.3.12.RELEASE</spring-boot.version>
        <!-- Spring Cloud -->
        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
        <!-- Spring Alibaba Cloud -->
        <spring-cloud-alibaba.version>2.2.6.RELEASE</spring-cloud-alibaba.version>
        <fastjson.version>1.2.68</fastjson.version>
        <hutool.version>5.7.18</hutool.version>
        <mysql-connector.version>8.0.25</mysql-connector.version>

        <!-- Swagger -->
        <knife4j.version>2.0.8</knife4j.version>

        <!-- Maven Plugin Versions -->
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <spring-boot-maven-plugin.version>2.2.6.RELEASE</spring-boot-maven-plugin.version>
        <!--Liquibase数据库版本更新工具-->
        <liquibase.version>4.9.1</liquibase.version>

        <!-- 内部开发的包 -->
        <jxrory-user.version>0.0.1-SNAPSHOT</jxrory-user.version>
        <jxrory-msg.version>0.0.1-SNAPSHOT</jxrory-msg.version>
        <jxrory-common.version>0.0.1-SNAPSHOT</jxrory-common.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 数据库插件 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>3.4.2</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.4.2</version>
            </dependency>

            <!-- JSON 序列 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.9</version>
            </dependency>

            <!-- hutools -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-http</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!--手机号解析-->
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>8.9.9</version>
            </dependency>

            <!--swagger-->
            <!-- swagger -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>1.5.22</version>
                <scope>compile</scope>
            </dependency>

            <!-- 公司内部包 -->
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>common</artifactId>
                <version>${jxrory-common.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>common-basic</artifactId>
                <version>${jxrory-common.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>user</artifactId>
                <version>${jxrory-user.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>user-api</artifactId>
                <version>${jxrory-user.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>user-entity</artifactId>
                <version>${jxrory-user.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>user-biz</artifactId>
                <version>${jxrory-user.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>msg</artifactId>
                <version>${jxrory-msg.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>msg-biz</artifactId>
                <version>${jxrory-msg.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>com.jxrory</groupId>
                <artifactId>payment-entity</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <scope>compile</scope>
            </dependency>


            <!-- 测试 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>RELEASE</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <profile.active>dev</profile.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 开发环境 -->
        <profile>
            <id>test</id>
            <properties>
                <profile.active>test</profile.active>
            </properties>
        </profile>

        <!-- 生产环境-->
        <profile>
            <id>prod</id>
            <properties>
                <profile.active>prod</profile.active>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- resources资源插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <delimiters>
                            <delimiter>@</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <encoding>UTF-8</encoding>
                        <!-- 后缀为pem、pfx的证书文件 -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            <nonFilteredFileExtension>key</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.version}</version>

                    <!-- 规范 migration 的一些配置 -->
                    <configuration>
                        <!-- 变更日志 changelog 的路径 -->
                        <changeLogFile>${project.basedir}/src/main/resources/liquibase/master.xml</changeLogFile>

                        <!-- 生成的两个库之间不同内容的xml文件的路径 -->
                        <diffChangeLogFile>
                            ${project.basedir}/src/main/resources/liquibase/changelog/${maven.build.timestamp}_changelog.mysql.sql
                        </diffChangeLogFile>

                        <!-- 通过liquibase:generateChangeLog命令生成所连接的数据库的对应changelog文件,可根据文件后缀名生成liquibase changelog支持的四种格式:xml sql json以及yml -->
                        <!-- 生成sql的时候需要指定对应类型的数据库 -->
                        <outputChangeLogFile>
                            ${project.basedir}/src/main/resources/liquibase/changelog/${maven.build.timestamp}_changelog.mysql.sql
                        </outputChangeLogFile>

                        <propertyFile>
                            ${project.basedir}/src/main/resources/liquibase/migration-${profile.active}.properties
                        </propertyFile>
                    </configuration>

                    <dependencies>
                        <dependency>
                            <groupId>org.liquibase</groupId>
                            <artifactId>liquibase-core</artifactId>
                            <version>${liquibase.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql-connector.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>